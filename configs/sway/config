# ------------------------------------------------------------------ #
# Sway window manager configuration - ar3s3ru                        #
# for ThinkPad X270                                                  #
# ------------------------------------------------------------------ #

# Colors -------------------------------------------------------------
# class                 border  backgr. text    indicator child_border
client.focused          #ECB258 #ECB258 #ffffff #473F33   #ECB258
client.focused_inactive #B0916C #B0916C #ffffff #635B51   #B0916C
client.unfocused        #202636 #202636 #888888 #787F91   #202636
client.urgent           #E12947 #E12947 #ffffff #A02338   #E12947
client.placeholder      #FD713B #FD713B #ffffff #000000   #FD713B
# --------------------------------------------------------------------

# --------------------------------------------------------------------
# Variables
# --------------------------------------------------------------------
set $mod Mod4

set $font xos4 Terminus 10
font pango:$font

# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term termite

# Your preferred application launcher
# Note: it's recommended that you pass the final command to sway
set $menu rofi -show run -font "xos4 Terminus 12" | xargs swaymsg exec

# --------------------------------------------------------------------
# Output configuration
# --------------------------------------------------------------------
output * bg ~/Pictures/wallpaper-japan-train.jpg fill

# You can get the names of your outputs by running: swaymsg -t get_outputs

# output HDMI-A-2 resolution 2560x1440 scale 1 pos 0 0 transform 90
# output DP-1 resolution 2560x1440 scale 1 pos 3360 0 transform 270
output eDP-1 resolution 1920x1080 scale 1 pos 1440 0

# --------------------------------------------------------------------
# Idle configuration
# --------------------------------------------------------------------
exec swayidle -w \
         timeout 300 'swaylock -f -c 000000' \
         timeout 600 'swaymsg "output * dpms off"' \
              resume 'swaymsg "output * dpms on"' \
         before-sleep 'swaylock -f -c 000000'

# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.


# --------------------------------------------------------------------
# Input configuration
# --------------------------------------------------------------------
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.
input "*" {
    xkb_layout us
    xkb_model pc105
    xkb_variant intl
}

input "2:7:SynPS/2_Synaptics_TouchPad" {
    tap enabled
    natural_scroll enabled
    dwt enabled
    middle_emulation enabled
}

input "2:10:TPPS/2_IBM_TrackPoint" {
    natural_scroll enabled
}

# Bluetooth Designer Mouse
input "1118:2053:Designer_Mouse" {
    natural_scroll enabled
}

# --------------------------------------------------------------------
# Key bindings
# --------------------------------------------------------------------
    # start a terminal
    bindsym $mod+Return exec $term

    # kill focused window
    bindsym $mod+Shift+q kill

    # start your launcher
    bindsym $mod+p exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # reload the configuration file
    bindsym $mod+Shift+c reload

    # exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'

# --------------------------------------------------------------------
# Moving around
# --------------------------------------------------------------------
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # _move_ the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right

# --------------------------------------------------------------------
# Workspace configuration
# --------------------------------------------------------------------
    # Workspace names
    set $workspace1  "1: term"
    set $workspace2  "2: www"
    set $workspace3  "3: code"
    set $workspace4  "4: ide"
    set $workspace5  "5: chat"
    set $workspace6  6
    set $workspace7  7
    set $workspace8  8
    set $workspace9  9
    set $workspace10 "10: slack"

    # Switch to workspace
    bindsym $mod+1 workspace $workspace1
    bindsym $mod+2 workspace $workspace2
    bindsym $mod+3 workspace $workspace3
    bindsym $mod+4 workspace $workspace4
    bindsym $mod+5 workspace $workspace5
    bindsym $mod+6 workspace $workspace6
    bindsym $mod+7 workspace $workspace7
    bindsym $mod+8 workspace $workspace8
    bindsym $mod+9 workspace $workspace9
    bindsym $mod+0 workspace $workspace10

    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace $workspace1
    bindsym $mod+Shift+2 move container to workspace $workspace2
    bindsym $mod+Shift+3 move container to workspace $workspace3
    bindsym $mod+Shift+4 move container to workspace $workspace4
    bindsym $mod+Shift+5 move container to workspace $workspace5
    bindsym $mod+Shift+6 move container to workspace $workspace6
    bindsym $mod+Shift+7 move container to workspace $workspace7
    bindsym $mod+Shift+8 move container to workspace $workspace8
    bindsym $mod+Shift+9 move container to workspace $workspace9
    bindsym $mod+Shift+0 move container to workspace $workspace10

    # Assigning application to workspaces
    assign [class="(?i)firefox"] $workspace2
    assign [class="(?i)code*"]   $workspace3
    assign [class="Telegram"]    $workspace5
    assign [class="(?i)slack"]   $workspace10

# --------------------------------------------------------------------
# Media keys
# --------------------------------------------------------------------
    # Pulse Audio controls
    bindsym XF86AudioRaiseVolume exec --no-startup-id amixer set Master 5%+
    bindsym XF86AudioLowerVolume exec --no-startup-id amixer set Master 5%-
    bindsym XF86AudioMute        exec --no-startup-id amixer set Master toggle

    # Sreen brightness controls
    bindsym XF86MonBrightnessUp   exec brightnessctl set +5%
    bindsym XF86MonBrightnessDown exec brightnessctl set 5%-

    # Media player controls
    bindsym XF86AudioPlay  exec playerctl play
    bindsym XF86AudioPause exec playerctl pause
    bindsym XF86AudioNext  exec playerctl next
    bindsym XF86AudioPrev  exec playerctl previous

# --------------------------------------------------------------------
# Layout stuff:
# --------------------------------------------------------------------
    # Windows configuration
    for_window [app_id="^.*"] border pixel 2

    gaps inner 5
    gaps outer 10

    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # move focus to the parent container
    bindsym $mod+a focus parent

# --------------------------------------------------------------------
# Scratchpad
# --------------------------------------------------------------------
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show

# --------------------------------------------------------------------
# Resizing containers
# --------------------------------------------------------------------
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

# --------------------------------------------------------------------
# Status Bar
# --------------------------------------------------------------------
bar {
    position top

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    status_command while date +'%Y-%m-%d %l:%M:%S %p'; do sleep 1; done

    colors {
        statusline #ffffff
        background #323232
        inactive_workspace #32323200 #32323200 #5c5c5c
    }
}

include /etc/sway/config.d/*
